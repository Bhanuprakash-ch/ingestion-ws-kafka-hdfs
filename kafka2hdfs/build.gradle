buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'jacoco' // for tests code coverage

def coverageFilePath = "${gradle.gradleUserHomeDir}/coverage.gradle"
if (file("${coverageFilePath}").exists()) {
    apply from: "${coverageFilePath}"
} else {
    logger.quiet("No such file: ${coverageFilePath}")
    logger.quiet("JaCoCo will not measure the code coverage!")
}
ext {
    requirements = [
        'INSTRUCTION'   : 0,
        'BRANCH'        : 0,
        'LINE'          : 0,
        'COMPLEXITY'    : 0,
        'METHOD'        : 0,
        'CLASS'         : 0
    ]
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

configurations {
    all*.exclude group: '', module: 'servlet-api'
    all*.exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"

    compile "org.trustedanalytics:hadoop-spring-utils:0.4.15"
    
    compile "org.apache.kafka:kafka_2.9.2:0.8.2.1"

    testCompile "junit:junit:4.11"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

springBoot {
    mainClass = "org.trustedanalytics.ingestion.kafka2hdfs.Main"
}

bootRun.systemProperties = System.properties
